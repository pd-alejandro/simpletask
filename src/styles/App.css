/* Header */
header {
    display: flex;
    justify-content: space-between;
    height: var(--header-height);
    color: var(--lighter);
    font-size: 1.75rem;
    line-height: 1;
    background-color: var(--primary);
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);
}

header p>span {
    font-weight: bolder;
}

.logo__container,
.controls__container {
    display: flex;
    align-items: center;
    height: 100%;
}

.logo__wrapper {
    height: 100%;
    padding: 1rem;
    aspect-ratio: 1/1;
}

.logo {
    height: 3rem;
    width: 3rem;
    aspect-ratio: 1/1;
}

/* Main */
main {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: calc(100svh - var(--header-height));
    padding: 0.5rem;
}

#task-container {
    padding: 1rem;
    width: 100%;
    max-width: 50ch;
    background-color: var(--content-background);
    border-radius: 2.625rem;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    opacity: 0;
    transform: translateY(20px);
    animation: containerApparition 0.2s 0.4s cubic-bezier(0, 0.6, 0.8, 1) forwards;
}

.task-list {
    padding: 0;
    margin: 0;
    list-style: none;
}

.task-list__add-button {
    width: 100%;
    padding: 1.5rem;
    font-size: 1.25rem;
    font-weight: bolder;
    text-transform: uppercase;
    line-height: 1;
    color: var(--lighter);
    background-color: var(--primary);
    border: none;
    border-radius: 2.125rem;
    cursor: pointer;
    transition: background-color var(--quick-transition) linear, box-shadow var(--quick-transition) linear, transform var(--quick-transition) linear;

    &::before {
        content: '+';
        margin-right: 0.5rem;
    }

    &:hover {
        background-color: var(--primary-dark);
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    &:active {
        background-color: var(--primary-light);
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
    }
}

/* Task component */
.task-item {
    contain: paint;
    display: flex;
    height: auto;
    min-height: 0;
    max-height: 0;
    margin-bottom: 0;
    background-color: var(--item-background);
    border-radius: 1.5rem;
    opacity: 0;
    animation: taskAppear 0.4s cubic-bezier(0, 0.6, 0.8, 1) forwards;
}

/* Task Checkbox Component */
.task-item__label {
    width: 3rem;
    height: 3rem;
    cursor: pointer;
}

.checkmark {
    display: block;
    width: 1.5rem;
    height: 1.5rem;
    margin: 0.75rem;
    background-color: var(--checkbox-background);
    border-radius: 50%;
    /* transform: translate(0.75rem, 0.75rem); */
}

.checkmark>svg {
    opacity: 0;
}

/* hidden input */
.checkbox--hidden {
    position: absolute;
    opacity: 0;
    pointer-events: none;
}

/* Task Content Component */
.task-item__name {
    flex: 1;
    max-height: 15rem;
    padding: 0.625rem 0;
    font-size: 1.25rem;
    line-height: 1.4;
    overflow-y: auto;
}

.task-item__name:focus {
    outline: none;
    box-shadow: inset 0 -3px 0 var(--outline-color);
}

.task-item:focus-within {
    outline: 2px solid var(--border-color);
}

/* Task Remove Component */
.task-item__remove {
    width: 3rem;
    height: 3rem;
}

.task-item__remove-button {
    --percent: 0%;
    width: 2rem;
    height: 2rem;
    padding: 0;
    background-color: color-mix(in srgb, var(--button-background) var(--percent), transparent 100%);
    border: none;
    border-radius: 50%;
    transform: translate(0.5rem, 0.5rem);
    contain: paint;
    cursor: pointer;
    opacity: 0;
    will-change: opacity, background-color;
    transition: background-color var(--quick-transition) linear;
}

.task-item__remove-button:hover {
    --percent: 90%;
}

.task-item__remove-button:active {
    --percent: 50%;
}

.task-item:is(:hover, :focus-within) .task-item__remove-button,
.task-item__remove-button:focus {
    opacity: 1;
}

/* -- when task is done */
.task-item:has(.checkmark--checked)>.task-item__name {
    color: var(--grey);
    text-decoration: line-through;
    text-decoration-thickness: 2px;
}

.checkmark--checked {
    background-color: var(--primary);
}

.checkmark--checked>svg {
    opacity: 1;
}

/* -- when task is being removed */
.removing-task {
    animation: taskDisappear var(--medium-transition) ease-in forwards;
}

.removing-task .task-item__name {
    overflow: hidden;
}


/* ===== Icons ===== */
svg.check-icon {
    width: 100%;
    height: 100%;

    &>path {
        stroke: var(--light);
        stroke-width: 50;
        fill: transparent;
    }
}

svg.cross-icon {
    width: 100%;
    height: 100%;

    &>path {
        stroke: var(--decorations-color);
        stroke-width: 40;
    }
}

/* ===== Animations ===== */
@keyframes taskAppear {
    50% {
        min-height: 3rem;
        max-height: 3rem;
        margin-bottom: 0.5rem;
        opacity: 1;
    }

    to {
        min-height: 3rem;
        max-height: 15rem;
        margin-bottom: 0.5rem;
        opacity: 1;
    }
}

/* --height is set trough react */
@keyframes taskDisappear {
    from {
        max-height: var(--height);
        margin-bottom: 0.5rem;
        opacity: 1;
    }

    to {
        max-height: 0rem;
        margin-bottom: 0rem;
        opacity: 0;
    }
}

@keyframes containerApparition {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}